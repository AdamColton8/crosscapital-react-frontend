'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _getError = require('./get-error');

var _getError2 = _interopRequireDefault(_getError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//Handles injecting props into the input fields (any component with a name prop)

var filters = {
  checkbox: function checkbox(value) {
    return value || false;
  },
  radio: function radio(value) {
    return value || false;
  },
  text: function text(value) {
    return value;
  }
};

var getValue = function getValue(type, rawValue) {
  var filter = filters[type] || filters.text;

  var value = filter(rawValue);
  if (value || value === false) return value;

  return '';
};

exports.default = function (child, values, children, errors, component) {
  var _child$props = child.props,
      name = _child$props.name,
      _onKeyUp = _child$props.onKeyUp,
      onEnter = _child$props.onEnter,
      type = _child$props.type;

  return _react2.default.cloneElement(child, {
    children: children,
    onChange: function onChange(e) {
      return component.validateOnBlurOrChange(name, e.target.value, function () {
        return component.onChange(e);
      });
    },
    onBlur: function onBlur(e) {
      return component.validateOnBlurOrChange(name, e.target.value);
    },
    error: (0, _getError2.default)(errors, name),
    value: getValue(type, values[name]),
    onKeyUp: function onKeyUp(e) {
      if (_onKeyUp) _onKeyUp(e);
      if (e.keyCode !== 13) return;
      if (onEnter) component.validate(onEnter);
    }
  });
};