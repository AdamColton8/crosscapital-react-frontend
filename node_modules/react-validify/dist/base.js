'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _input = require('./input');

var _input2 = _interopRequireDefault(_input);

var _submit = require('./submit');

var _submit2 = _interopRequireDefault(_submit);

var _validate6 = require('./validate');

var _validate7 = _interopRequireDefault(_validate6);

var _getChildren = require('./get-children');

var _getChildren2 = _interopRequireDefault(_getChildren);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FormBase = function (_React$Component) {
  _inherits(FormBase, _React$Component);

  function FormBase() {
    _classCallCheck(this, FormBase);

    var _this = _possibleConstructorReturn(this, (FormBase.__proto__ || Object.getPrototypeOf(FormBase)).call(this));

    _this.onChange = _this.onChange.bind(_this);
    _this.validate = _this.validate.bind(_this);
    _this.validateOnBlurOrChange = _this.validateOnBlurOrChange.bind(_this);
    return _this;
  }

  _createClass(FormBase, [{
    key: 'validate',
    value: function validate(onClick) {
      var _props = this.props,
          rules = _props.rules,
          _props$errorMessages = _props.errorMessages,
          errorMessages = _props$errorMessages === undefined ? {} : _props$errorMessages,
          _props$attributeNames = _props.attributeNames,
          attributeNames = _props$attributeNames === undefined ? {} : _props$attributeNames,
          onErrors = _props.onErrors,
          values = _props.values;

      if (!rules) return onClick(values);

      var _validate2 = (0, _validate7.default)(values, rules, errorMessages, attributeNames),
          formErrors = _validate2.formErrors;

      if (formErrors) return onErrors(formErrors);else onErrors(undefined);

      return onClick(values);
    }
  }, {
    key: 'validateOnBlurOrChange',
    value: function validateOnBlurOrChange(name, value, onChange) {
      if (onChange) onChange();
      var _props2 = this.props,
          rules = _props2.rules,
          _props2$errorMessages = _props2.errorMessages,
          errorMessages = _props2$errorMessages === undefined ? {} : _props2$errorMessages,
          _props2$attributeName = _props2.attributeNames,
          attributeNames = _props2$attributeName === undefined ? {} : _props2$attributeName,
          _props2$errors = _props2.errors,
          errors = _props2$errors === undefined ? {} : _props2$errors,
          onErrors = _props2.onErrors;


      if (!rules || !rules[name]) return;

      var _validate3 = (0, _validate7.default)(_defineProperty({}, name, value), _defineProperty({}, name, rules[name]), errorMessages, attributeNames),
          formErrors = _validate3.formErrors;

      if (formErrors && value && !onChange) {
        return onErrors(_extends({}, errors, formErrors));
      }

      if (errors[name]) {
        return onErrors(_extends({}, errors, _defineProperty({}, name, null)));
      }
    }
  }, {
    key: 'onChange',
    value: function onChange(_ref) {
      var target = _ref.target;
      var _props3 = this.props,
          onValues = _props3.onValues,
          onValue = _props3.onValue,
          values = _props3.values;


      var value = !target.value && (target.type === 'checkbox' || target.type === 'radio') ? target.checked : target.value;

      values[target.name] = value;

      if (onValues) onValues(_extends({}, values));
      if (onValue) onValue(target.name, value);
    }
  }, {
    key: 'renderChildren',
    value: function renderChildren(children) {
      var _this2 = this;

      return _react2.default.Children.map(children, function (child) {
        if (!child || !child.props) return child;

        var children = (0, _getChildren2.default)(child, _this2);

        var _props4 = _this2.props,
            _props4$values = _props4.values,
            values = _props4$values === undefined ? {} : _props4$values,
            errors = _props4.errors;

        if (child.props.name) return (0, _input2.default)(child, values, children, errors, _this2);
        if (child.props.submit) return (0, _submit2.default)(child, children, _this2);

        return _react2.default.cloneElement(child, { children: children });
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props5 = this.props,
          children = _props5.children,
          rules = _props5.rules,
          errorMessages = _props5.errorMessages,
          attributeNames = _props5.attributeNames,
          values = _props5.values,
          onValues = _props5.onValues,
          errors = _props5.errors,
          onErrors = _props5.onErrors,
          onValue = _props5.onValue,
          props = _objectWithoutProperties(_props5, ['children', 'rules', 'errorMessages', 'attributeNames', 'values', 'onValues', 'errors', 'onErrors', 'onValue']);

      return _react2.default.createElement(
        'div',
        props,
        this.renderChildren(children)
      );
    }
  }]);

  return FormBase;
}(_react2.default.Component);

exports.default = FormBase;