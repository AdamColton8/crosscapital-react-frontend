import React, { Component } from 'react'
import {connect} from "react-redux"
import PropTypes from 'prop-types'
import * as api from '_services';
import { alertActions } from '_actions';
import WithFormsyInput from "_components/WithFormsyInput";
import WithFormsyTextarea from "_components/WithFormsyTextarea";
import Formsy from 'formsy-react';
import WithFormsySelect from "_components/WithFormsySelect";
import Header from "components/layout/header/index";


class Support extends Component {
  constructor(props) {
    super(props);

    // reset login status
    this.state = {
      canSubmit: false,
      submitted: false
    };

  }

  handleSubmit = (data) => {
    let _this = this;
    this.setState({ submitted: true });
    api.userService.askSupport(data)
      .then(response => {
        this.props.dispatch(alertActions.success("We'll answer as soon as possible"));
      })
      .catch(error => {
        this.props.dispatch(alertActions.error('Something went wrong'));
      });
  };

  enableButton = () => {
    this.setState({ canSubmit: true });
  };

  disableButton = () => {
    this.setState({ canSubmit: false });
  };

  render() {
    const optionsList=['Technical Support','General Questions', 'Other'];
    let {
      state: {
        canSubmit
      },
      props: {
        loggingIn
      },
      handleSubmit,
      enableButton,
      disableButton
    } = this;
    return (
      <div className="base-content">
        <Header/>
        <div className={'sign-up__block ov-h bg-none flex-1'}>
          <div className="container">
            <div className="row mb-5">
              <div className="col-12 text-center">
                <div className="h2 mb-2 font-weight-light">Support</div>
                <p className="mb-0 text-light-grey">We will provide answers to <br/> all your questions </p>
              </div>
            </div>
            <div className="row position-relative">
              <div className="squares__left"><span/></div>
              <div className="squares__right"><span/></div>
              <div className="col-10 col-md-6 col-lg-4 mx-auto">
                <Formsy
                  onSubmit={handleSubmit}
                  onValid={enableButton}
                  onInvalid={disableButton}
                >
                  <label className='form-group d-block' >
                    <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">Name and surname</span>
                    <WithFormsyInput
                      required
                      name='username'
                      className="form-control form-control-lg mb-2"
                    />
                  </label>
                  <label className='form-group d-block' >
                    <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">Email</span>
                    <WithFormsyInput
                      validations={{
                        isEmail: true
                      }}
                      validationErrors={{
                        isEmail: 'The field value is not a valid email address'
                      }}
                      required
                      name='email'
                      className="form-control form-control-lg mb-2"
                    />
                  </label>
                  <label className='form-group d-block' >
                    <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">Category</span>
                    <WithFormsySelect
                      name='cattegory'
                      required
                      className="custom-select custom-select-lg no-resize mb-2"
                    >
                      <option>Choose a cattegory</option>
                      {
                        optionsList.map((el, i) =>{
                          return(
                            <option value={el} key={i}>{el}</option>
                          )
                        })
                      }
                    </WithFormsySelect>
                  </label>
                  <label className='form-group d-block' >
                    <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">Message</span>
                    <WithFormsyTextarea
                      required
                      name='message'
                      className="form-control form-control-lg mb-2 no-resize"
                    />
                  </label>
                  <button
                    className="btn btn-success w-100 font-weight-bold btn-lg"
                    type="submit"
                    disabled={!canSubmit}
                    style={{marginBottom: 14}}
                  >
                    Submit
                  </button>
                </Formsy>
              </div>
            </div>
          </div>
        </div>
      </div>
    )
  }
}

Support.contextTypes = {
  router: PropTypes.shape({}),
};
const _Support = connect(()=>{})(Support);
export default _Support;
