import React, { Component } from 'react';
import { Link } from "react-router";
import { authActions } from "_actions/auth.actions";
import * as R from 'ramda'
import {connect} from "react-redux";
import PropTypes from 'prop-types';
import Formsy from 'formsy-react';
import WithFormsyInput from "_components/WithFormsyInput";

class PasswordReset extends Component {
  constructor(props) {
    super(props);

    // reset login status
    this.props.logout();
    this.state = {
      canSubmit: false,
      submitted: false
    };

    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleChange(values) {
    this.setState({ formValues: values.values });
  }

  handleErrorChange(errors) {
    const newErrors  = R.merge(this.state.formErrors, errors.errors);
    this.setState({ formErrors: newErrors });
  }

  handleSubmit = (values) => {
    let _this = this;
    this.setState({ submitted: true });
    const { resetPassword } = this.props;
    resetPassword(values);
  };

  componentWillMount(){
    let token = this.props.routing.locationBeforeTransitions.query.secret;
    let email = this.props.routing.locationBeforeTransitions.query.email;
    if (!token || !email) {
      this.context.router.push('/auth/login');
    } else {
      let newState = {
        formValues: {
          token: token,
          email: email,
          password: '',
          password_confirmation: '',
        },
      } ;
      newState =  Object.assign({},newState);
      this.setState(newState);
    }
  }

  enableButton = () => {
    this.setState({ canSubmit: true });
  };

  disableButton = () => {
    this.setState({ canSubmit: false });
  };

  render() {
    let {
      props: {
        loggingIn
      },
      state: {
        canSubmit
      },
      handleSubmit,
      enableButton,
      disableButton
    } = this;
    return (
      <div className="container">
        <div className="row mb-5">
          <div className="col-12 text-center">
            <div className="h2 mb-2 font-weight-light">Password reset</div>
            <p className="mb-0 text-light-grey">We had the ambition to make a platform <br /> that would help people</p>
          </div>
        </div>
        <div className="row position-relative">
          <div className="squares__left"><span /></div>
          <div className="squares__right"><span /></div>
          <div className="col-10 col-md-6 col-lg-4 mx-auto">
            <Formsy
              onSubmit={handleSubmit}
              onValid={enableButton}
              onInvalid={disableButton}
            >
              <label className='form-group d-block' >
                <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">Password</span>
                <WithFormsyInput
                  validations={{
                    minLength: 6
                  }}
                  validationErrors={{
                    minLength: 'The password min length 6'
                  }}
                  required
                  type='password'
                  name='password'
                  placeholder="Password"
                  className="form-control form-control-lg mb-2"
                />
              </label>
              <label className='form-group d-block' >
                <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">Retype password</span>
                <WithFormsyInput
                  validations={{
                    equalsField: 'password'
                  }}
                  validationErrors={{
                    equalsField: "The password confirmation doesn't match"
                  }}
                  required
                  type='password'
                  name='password_confirmation'
                  placeholder="Retype password"
                  className="form-control form-control-lg mb-2"
                />
              </label>
              <button submit
                      className="btn btn-success w-100 font-weight-bold btn-lg"
                      type="submit"
                      disabled={!canSubmit}
                      style={{marginBottom: 14}}
              >
                Change password
              </button>
            </Formsy>
            <p className="mb-0 text-center">
              <Link className="text-dark-gray font-weight-bold link-tdu" to='/auth/login'>Cancel</Link>
            </p>
          </div>
        </div>
      </div>
    )
  }
}

PasswordReset.contextTypes = {
  router: PropTypes.shape({}),
};

function mapStateToProps(state) {
  return {
    routing: state.routing
  };
}

const connectedPasswordReset = connect(mapStateToProps, {
  resetPassword: authActions.resetPassword,
  logout: authActions.logout
})(PasswordReset);
export default connectedPasswordReset;
