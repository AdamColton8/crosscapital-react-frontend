import React,{ Component } from 'react'
import {alertActions, userActions} from "_actions";
import { connect } from "react-redux";
import PropTypes from 'prop-types'
import * as api from "_services";
import WithFormsyInput from "_components/WithFormsyInput";
import Formsy from 'formsy-react';

class ProfileSettingsPassword extends Component {

  constructor(props) {
    super(props);

    // reset login status
    this.state = {
      canSubmit: false,
      submitted: false
    };

  }

  handleSubmit = (formData) => {
    let _this = this;
    this.props.changeUserPassword(formData)
  };

  enableButton = () => {
    this.setState({ canSubmit: true });
  };

  disableButton = () => {
    this.setState({ canSubmit: false });
  };

  render() {
    let {
      state: {
        canSubmit
      },
      handleSubmit,
      enableButton,
      disableButton
    } = this;
    return (
      <div className='row'>
        <div className="col-12">
          <div className="ui-fz-28 mb-2 font-weight-light"> Change password </div>
          {/*<p className="text-secondary ui-fz-14 mb-4"> After your term deposit period is finished you'll be able to access your money and the interest you've earned.  </p>*/}
          <Formsy
            onSubmit={handleSubmit}
            onValid={enableButton}
            onInvalid={disableButton}
          >
              <label className='form-group d-block' >
                <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">Old password</span>
                <WithFormsyInput
                  required
                  name='old_password'
                  type='password'
                  className="form-control form-control-lg mb-2"
                />
              </label>
              <label className='form-group d-block' >
                <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">New password</span>
                <WithFormsyInput
                  // defaultValue={formValues.first_name}
                  validations={{
                    minLength: 6
                  }}
                  validationErrors={{
                    minLength: 'The password min length 6'
                  }}
                  required
                  type='password'
                  name='password'
                  className="form-control form-control-lg mb-2"
                />
              </label>
              <label className='form-group d-block' >
                <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">New password confirmation</span>
                <WithFormsyInput
                  // defaultValue={formValues.first_name}
                  validations={{
                    equalsField: 'password'
                  }}
                  validationErrors={{
                    equalsField: "The password confirmation doesn't match"
                  }}
                  required
                  type='password'
                  name='password_confirmation'
                  className="form-control form-control-lg mb-2"
                />
              </label>
              <div className="row">
                <div className="col-6 col-md-3 mx-auto">
                  <button
                    className="btn btn-success w-100 font-weight-bold btn-lg"
                    type="submit"
                    disabled={!canSubmit}
                    style={{marginBottom: 14}}
                  >
                    Save
                  </button>
                </div>
                {/*<div className="col-6 col-md-3 ml-auto">*/}
                  {/*<button className="btn btn-outline-light w-100 font-weight-bold btn-lg text-dark border" type="reset"*/}
                          {/*style={{marginBottom: 14}}>Cancel*/}
                  {/*</button>*/}
                {/*</div>*/}
              </div>
          </Formsy>
        </div>
      </div>
    )
  }
}


ProfileSettingsPassword.contextTypes = {
  router: PropTypes.shape({}),
};

function mapStateToProps(state) {
  return {
  };
}

const _ProfileSettingsPassword = connect(mapStateToProps,{
  changeUserPassword: userActions.changeUserPassword,
})(ProfileSettingsPassword);

export default _ProfileSettingsPassword;
