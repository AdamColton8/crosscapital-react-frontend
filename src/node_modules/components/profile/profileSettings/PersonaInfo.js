import React,{ Component } from 'react'
import { userActions } from "_actions";
import { connect } from "react-redux";
import PropTypes from 'prop-types'
import * as R from 'ramda'
import WithFormsyInput from "_components/WithFormsyInput";
import Formsy from 'formsy-react';

class ProfileSettingsPersonalInfo extends Component {
  constructor(props) {
    super(props);

    // reset login status
    this.state = {
      canSubmit: false,
    };

    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleChange(values) {
    this.setState({ formValues: values.values });
  }

  handleErrorChange(errors) {
    const newErrors  = R.merge(this.state.formErrors, errors.errors);
    this.setState({ formErrors: newErrors });
  }

  handleSubmit = (formData) => {
    let _this = this;
    this.props.changePersonalData(formData);
  };

  enableButton = () => {
    this.setState({ canSubmit: true });
  };

  disableButton = () => {
    this.setState({ canSubmit: false });
  };


  render() {
    let {
      props: {
        userData
      },
      state: {
        canSubmit
      },
      handleSubmit,
      enableButton,
      disableButton
    } = this;
    return (
      <div className='row'>
        <div className="col-12">
          <div className="ui-fz-28 mb-2 font-weight-light"> Your personal information </div>
          <p className="text-secondary ui-fz-14 mb-4"> After your term deposit period is finished you'll be able to access your money and the interest you've earned.  </p>
          {

          }

          <Formsy
            onSubmit={handleSubmit}
            onValid={enableButton}
            onInvalid={disableButton}
          >
              <label className='form-group d-block' >
                <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">First name</span>
                <WithFormsyInput
                  initialValue={userData.first_name }
                  required
                  name='first_name'
                  className="form-control form-control-lg mb-2"
                />
              </label>
              <label className='form-group d-block' >
                <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">Last name</span>
                <WithFormsyInput
                  initialValue={userData.last_name}
                  required
                  name='last_name'
                  className="form-control form-control-lg mb-2"
                />
              </label>
              <label className='form-group d-block' >
                <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">Email</span>
                <WithFormsyInput
                  validations={{
                    isEmail: true
                  }}
                  validationErrors={{
                    isEmail: 'The field value is not a valid email address'
                  }}
                  initialValue={userData.email}
                  required
                  name='email'
                  className="form-control form-control-lg mb-2"
                />
              </label>
              <label className='form-group d-block mb-5' >
                <span className="d-block mb-1 text-light-grey ui-fz-14 font-weight-medium">Username</span>
                <WithFormsyInput
                  initialValue={userData.username}
                  required
                  name='username'
                  className="form-control form-control-lg mb-2"
                />
              </label>
              <div className="row">
                <div className="col-6 col-md-3 mx-auto">
                  <button
                    className="btn btn-success w-100 font-weight-bold btn-lg"
                    type="submit"
                    disabled={!canSubmit}
                    style={{marginBottom: 14}}
                  >
                    Save
                  </button>
                </div>
                {/*<div className="col-6 col-md-3 ml-auto">*/}
                  {/*<button*/}
                    {/*className="btn btn-outline-light w-100 font-weight-bold btn-lg text-dark border"*/}
                    {/*type="reset"*/}
                    {/*style={{marginBottom: 14}}*/}
                  {/*>*/}
                    {/*Cancel*/}
                  {/*</button>*/}
                {/*</div>*/}
              </div>
          </Formsy>
        </div>
      </div>
    )
  }

}


ProfileSettingsPersonalInfo.contextTypes = {
  router: PropTypes.shape({}),
};

function mapStateToProps(state) {
  return {
    userData: state.userData
  };
}

const _ProfileSettingsPersonalInfo = connect(mapStateToProps,{
  changePersonalData: userActions.changePersonalData,
})(ProfileSettingsPersonalInfo);

export default _ProfileSettingsPersonalInfo;
