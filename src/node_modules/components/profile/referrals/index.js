import React,{Component} from 'react'
import {Link} from "react-router";
import {userActions} from "_actions";
import {connect} from "react-redux";
import PropTypes from 'prop-types'
import { toFloatNumbers } from '_helpers'
import {tradePlans} from "_reducers/trade.plans.reducer";
import {Modal} from "reactstrap";

import icoPerfect_money from "img/icons/pay-systems/pm.png"
import icoAdvanced_cash from "img/icons/pay-systems/adv_cash.png"
import icoPayeer from "img/icons/pay-systems/py.png"

let PaymentSystemsIcons = {
  perfect_money: icoPerfect_money,
  advanced_cash: icoAdvanced_cash,
  payeer: icoPayeer
};

class ProfileReferrals extends Component {
  constructor(props) {
    super(props);

    this.state = {
      activatePopup: false,
      planData: {
        payment_alias: "perfect_money",
        initial_money: 0,
        plan_id: false
      }
    };

    this.toggleActivatePlan = this.toggleActivatePlan.bind(this);
  }

  toggleActivatePlan(id){
    let newState = {
      activatePopup: !this.state.activatePopup
    };
    if (id) {
      let newPlanData = this.state.planData;
      newPlanData.plan_id = id;
      newState.planData = newPlanData;
    }

    this.setState(newState);
  }

  componentDidMount(){
    this.props.fetchUserReferrals()
  }

  cancelWithdraw = (e, id, i)=> {
    e.preventDefault();
    this.props.cancelUserWithdraw({id: id}, i);
    return false;
  };

  statusCaseRender(status){
    switch (status){
      case 'done':
        return 'text-success';
      case 'pending':
        return 'text-warning';
      default:
        return 'text-secondary'
    }
  }

  render() {
    let  {
      toggleActivatePlan,
      cancelWithdraw,
      statusCaseRender
    } = this;
    let { activatePopup } = this.state;

    let {
      userReferrals
    } = this.props;

    return (
      <div className='row'>

          <div className="col-12 bg-white">
              {
                  userReferrals.length &&
                  userReferrals.map((referral,i)=>{
                      return (
                          <table className="table">
                              <thead className="thead-light">
                              <tr>
                                  <th scope="col">
                                      Name:
                                  </th>
                                  <th scope="col">Date:</th>
                                  <th scope="col">Alias:</th>
                                  <th scope="col">Trade Plan:</th>
                                  <th scope="col">Initial money:</th>
                                  <th scope="col">%</th>
                                  <th scope="col">Referral Line:</th>
                                  <th scope="col">Sum:</th>
                              </tr>
                              </thead>
                              <tbody>
                              <tr>
                                  <th scope="row"><div className="" key={`referral_${i}`}>
                                      <span>{referral.first_name}</span>
                                  </div></th>
                                  <td>
                                      {
                                      referral.sub_referrals.map((sub_referral,j)=>{
                                          return (
                                              <div>
                                                 <span>{sub_referral.date}</span>
                                              </div>
                                          )
                                       })
                                      }
                                  </td>
                                  <td>{
                                      referral.sub_referrals.map((sub_referral,j)=>{
                                          return (
                                              <div>
                                                  <span>{sub_referral.alias}</span>
                                              </div>
                                          )
                                      })
                                  }</td>
                                  <td>{
                                      referral.sub_referrals.map((sub_referral,j)=>{
                                          return (
                                              <div>
                                                  <span>{sub_referral.name}</span>
                                              </div>
                                          )
                                      })
                                  }</td>
                                  <td>{
                                      referral.sub_referrals.map((sub_referral,j)=>{
                                          return (
                                              <div>
                                                  <span>{sub_referral.initial_money/100}â‚¬</span>
                                              </div>
                                          )
                                      })
                                  }</td>
                                  <td>{
                                      referral.sub_referrals.map((sub_referral,j)=>{
                                          return (
                                              <div>
                                                  <span>{sub_referral.percent}%</span>
                                              </div>
                                          )
                                      })
                                  }</td>
                                  <td>{
                                      referral.sub_referrals.map((sub_referral,j)=>{
                                          return (
                                              <div>
                                                  <span>{sub_referral.referal_line}</span>
                                              </div>
                                          )
                                      })
                                  }</td>
                                  <td>{
                                      referral.sub_referrals.map((sub_referral,j)=>{
                                          return (
                                              <div>
                                                  <span>{sub_referral.sum}</span>
                                              </div>
                                          )
                                      })
                                  }</td>
                              </tr>


                              </tbody>
                          </table>
                      )
                  })
              }
                  </div>
      </div>
    )
  }
}


ProfileReferrals.contextTypes = {
  router: PropTypes.shape({}),
};

function mapStateToProps(state) {
  const { loggingIn } = state.authentication;
  return {
    userReferrals: state.userReferrals
  };
}

const _ProfileReferrals = connect(mapStateToProps,{
  fetchUserReferrals: userActions.fetchUserReferrals,
})(ProfileReferrals);

export default _ProfileReferrals;
