import React,{Component} from 'react'
import {Link} from "react-router";
import {userActions} from "_actions";
import {connect} from "react-redux";
import PropTypes from 'prop-types'
import { toFloatNumbers } from '_helpers'
import {tradePlans} from "_reducers/trade.plans.reducer";
import {Modal} from "reactstrap";

import icoPerfect_money from "img/icons/pay-systems/pm.png"
import icoAdvanced_cash from "img/icons/pay-systems/adv_cash.png"
import icoPayeer from "img/icons/pay-systems/py.png"

let PaymentSystemsIcons = {
  perfect_money: icoPerfect_money,
  advanced_cash: icoAdvanced_cash,
  payeer: icoPayeer
};

class ProfileReferrals extends Component {
  constructor(props) {
    super(props);

    this.state = {
      activatePopup: false,
      planData: {
        payment_alias: "perfect_money",
        initial_money: 0,
        plan_id: false
      }
    };

    this.toggleActivatePlan = this.toggleActivatePlan.bind(this);
  }

  toggleActivatePlan(id){
    let newState = {
      activatePopup: !this.state.activatePopup
    };
    if (id) {
      let newPlanData = this.state.planData;
      newPlanData.plan_id = id;
      newState.planData = newPlanData;
    }

    this.setState(newState);
  }

  componentDidMount(){
    this.props.fetchUserReferrals()
  }

  cancelWithdraw = (e, id, i)=> {
    e.preventDefault();
    this.props.cancelUserWithdraw({id: id}, i);
    return false;
  };

  statusCaseRender(status){
    switch (status){
      case 'done':
        return 'text-success';
      case 'pending':
        return 'text-warning';
      default:
        return 'text-secondary'
    }
  }

  render() {
    let  {
      toggleActivatePlan,
      cancelWithdraw,
      statusCaseRender
    } = this;
    let { activatePopup } = this.state;

    let {
      userReferrals
    } = this.props;

    return (
      <div className='row'>
        <div className="col-12">
          <div className="user-profile__table user-users__table table-responsive">
            <table className="w-100">
              <thead className="text-secondary">
              <tr>
                <th className="font-weight-normal">№</th>
                <th className="font-weight-normal">Name</th>
                <th className="font-weight-normal">Last name</th>
                <th className="font-weight-normal">E-mail</th>
                <th className="font-weight-normal">Username</th>
                {/*<th className="font-weight-normal">Статус</th>*/}
              </tr>
              </thead>
              <tbody>
              {
                userReferrals.length &&
                userReferrals.map((referral,i)=>{
                  return (
                    <tr className="table_row" key={`referral_${i}`}>
                      <td className="num_td pr-3"><span>{referral.id}</span></td>
                      <td className="name_td pr-3"><span>{referral.first_name}</span></td>
                      <td className="last-name_td pr-3"><span>{referral.last_name}</span></td>
                      <td className="email_td pr-3"><span>{referral.email}</span></td>
                      <td className="skype_td pr-3"><span>{referral.username}</span></td>
                      {/*<td className="pay-system_td pr-3">*/}
                        {/*<div className="d-flex align-items-center"><span className="d-inline-block align-middle mr-2"><img className="d-block rounded-circle" src="img/icons/pay-systems/py.png" width={24} /></span><span className="d-inline-block align-middle amount text-dark">Payeer</span></div>*/}
                      {/*</td>*/}
                    </tr>
                  )
                })
              }
              </tbody>
            </table>
          </div>
        </div>
      </div>
    )
  }
}


ProfileReferrals.contextTypes = {
  router: PropTypes.shape({}),
};

function mapStateToProps(state) {
  const { loggingIn } = state.authentication;
  return {
    userReferrals: state.userReferrals
  };
}

const _ProfileReferrals = connect(mapStateToProps,{
  fetchUserReferrals: userActions.fetchUserReferrals,
})(ProfileReferrals);

export default _ProfileReferrals;
