import axios from 'axios';
import requestsUrl from 'projConfig'
import * as R from 'ramda'

export const userService = {
  fetchUserData,
  fetchWallets,
  fetchDeposits,
  fetchOperations,
  fetchReferrals,
  getReferralLink,
  cancelWithdraw,
  withdrawRequest,
  activatePlanFromBalanceRequest,
  activatePlanRequest,
  askSupport,
  changePassword,
  changePersonalData,
  changeWallet
};

function fetchUserData() {
  return axios.get(requestsUrl.user.info)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    // .then(plans => {
    //   return Promise.resolve(plans);
    // })
    .catch(error=>{
      return Promise.reject(error);
    });
}

function fetchWallets() {
  return axios.get(requestsUrl.user.wallets)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(plans => {
      return Promise.resolve(plans);
    });
}

function fetchDeposits() {
  return axios.get(requestsUrl.user.deposits)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(deposits => {
      return Promise.resolve(deposits);
    });
}

function fetchOperations() {
  return axios.get(requestsUrl.user.operations)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(operations => {
      return Promise.resolve(operations);
    });
}


function fetchReferrals() {
  return axios.get(requestsUrl.user.referrals)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(operations => {
      return Promise.resolve(operations);
    });
}

function cancelWithdraw(payload) {
  return axios.post(requestsUrl.user.actions.cancelWithdraw, payload)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(operatins => {
      return Promise.resolve(operatins);
    });
}

function withdrawRequest(payload) {
  return axios.post(requestsUrl.user.actions.withdraw, payload)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(operatins => {
      return Promise.resolve(operatins);
    });
}

function activatePlanFromBalanceRequest(payload) {
  return axios.post(requestsUrl.user.actions.activatePlanFromBalance, payload)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(plan => {
      return Promise.resolve(plan);
    });
}

function activatePlanRequest(payload) {
  return axios.post(requestsUrl.user.actions.activatePlan, payload)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(plan => {
      return Promise.resolve(plan);
    });
}

function getReferralLink(payload) {
  return axios.post(requestsUrl.user.referralLink)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(plan => {
      return Promise.resolve(plan);
    });
}

function askSupport(payload) {
  return axios.post(requestsUrl.user.support, payload)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(plan => {
      return Promise.resolve(plan);
    });
}

function changePassword(payload) {
  return axios.post(requestsUrl.user.actions.changePassword, payload)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(plan => {
      return Promise.resolve(plan);
    });
}


function changePersonalData(payload) {
  return axios.post(requestsUrl.user.actions.changePersonalData, payload)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(plan => {
      return Promise.resolve(plan);
    });
}

function changeWallet(payload) {
  return axios.post(requestsUrl.user.actions.changeWallet, payload)
    .then(response => {
      if (response.status !== 200) {
        return Promise.reject(response);
      }
      return response.data;
    })
    .then(plan => {
      return Promise.resolve(plan);
    });
}


