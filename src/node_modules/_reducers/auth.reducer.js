import { authConstants } from '../_constants';
import { isUserAuthorized }  from '_helpers/functions';

function getAuthenticationInitialState(){
  let user =  isUserAuthorized(true);
  if (isUserAuthorized(true)) {
    return {
      loggedIn: true,
      user: user
    }
  }
  return {};
}

export function authentication(state = getAuthenticationInitialState(), action) {
  switch (action.type) {
    case authConstants.LOGIN_REQUEST:
      return state;
    case authConstants.LOGIN_SUCCESS:
      return {
        loggedIn: true,
        user: {}
      };
    case authConstants.LOGIN_FAILURE:
      return {};
    case authConstants.LOGOUT:
      return {};
    default:
      return state
  }
}

export function registration(state = {}, action) {
  switch (action.type) {
    case authConstants.REGISTER_REQUEST:
      return { registering: true };
    case authConstants.REGISTER_SUCCESS:
      return {};
    case authConstants.REGISTER_FAILURE:
      return {};
    default:
      return state
  }
}